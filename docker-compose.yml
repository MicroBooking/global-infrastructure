version: "3.9"
services:
  listings-service:
    build:
      context: ./listings-service
      dockerfile: Dockerfile
    environment:
      - PG_HOST=jdbc:postgresql://pg-listings:5432/listings
      - PG_USER=dbuser
      - POSTGRES_DB=postgres
      - PG_PASSWORD=postgres
      - CONSUL_HOST=http://consul:8500
    ports:
      - "8080:8080"
    networks:
      - booking
  reservations-service:
    build:
      context: ./reservations-service
      dockerfile: Dockerfile
    environment:
      - PG_HOST=jdbc:postgresql://pg-reservations:5432/reservations
      - PG_USER=dbuser
      - POSTGRES_DB=postgres
      - PG_PASSWORD=postgres
      - CONSUL_HOST=http://consul:8500
    ports:
      - "8081:8080"
    networks:
      - booking
  images-service:
    build:
      context: ./images-service
      dockerfile: Dockerfile
    environment:
      - PG_HOST=jdbc:postgresql://pg-images:5432/images
      - PG_USER=dbuser
      - POSTGRES_DB=postgres
      - PG_PASSWORD=postgres
      - CONSUL_HOST=http://consul:8500
      - CLOUDINARY_CLOUD_NAME = <cloud_name>
      - CLOUDINARY_API_KEY = <api_key>
      - CLOUDINARY_API_SECRET = <api_secret>
    ports:
      - "8082:8080"
    networks:
      - booking
  pg-listings:
    environment:
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=listings
    ports:
      - '5432'
    image: 'postgres:13'
    networks:
      - booking
  pg-reservations:
    environment:
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=reservations
    ports:
      - '5432'
    image: 'postgres:13'
    networks:
      - booking
  pg-images:
    environment:
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=images
    ports:
      - '5432'
    image: 'postgres:13'
    networks:
      - booking
  consul:
    image: 'consul:latest'
    ports:
      - '8500:8500'
    networks:
      - booking
networks:
  booking:
    name: booking_network